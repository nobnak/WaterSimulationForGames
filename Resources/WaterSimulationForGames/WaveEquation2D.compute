#pragma kernel Next
#pragma kernel Clamp

#include "Assets/Packages/Gist/CGIncludes/Math.cginc"



int2 _Count;
RWTexture2D<float> _V;
Texture2D<float> _U0;
RWTexture2D<float> _U1;

float4 _Params; // c^2, 1/h^2, dt, maxSlope * h



[numthreads(8, 8, 1)]
void Next(uint3 id : SV_DispatchThreadID) {
	int2 c = id.xy;
	float u = _U0[c];
	float v = _V[c];
	int4 ix = clamp(c.xyxy + int4(-1, 0, 1, 0), 0, _Count.xyxy - 1);
	int4 iy = clamp(c.xyxy + int4(0, -1, 0, 1), 0, _Count.xyxy - 1);

	float uo = _U0[ix.xy] + _U0[ix.zw] + _U0[iy.xy] + _U0[iy.zw] - 4 * u;
	float a = _Params.x * uo * _Params.y;

	v += a * _Params.z;
	u += v * _Params.z;

	_V[c] = v;
	_U1[c] = u;
}

[numthreads(8, 8, 1)]
void Clamp(uint3 id : SV_DispatchThreadID) {
	int2 c = id.xy;
	float u = _U0[c];
	float v = _V[c];

	v= lerp(v, 0, saturate(1e-2 * _Params.z));
	u = lerp(u, 0, saturate(1e-2 * _Params.z));

	_V[c] = v;
	_U1[c] = u;
}
