#pragma kernel Next
#pragma kernel Clamp

#include "Assets/Packages/Gist/CGIncludes/Math.cginc"



int _Count;
Texture2D<int> _B;
RWTexture2D<float> _V;
Texture2D<float> _U0;
RWTexture2D<float> _U1;

// Dt, Damp
float4 _Params; 


[numthreads(64,1,1)]
void Next(uint3 id : SV_DispatchThreadID) {
	int2 c = int2(id.x, 0);
	int b = _B[c];
	if (b != 0)
		return;
	float u = _U0[c];
	float v = _V[c];

	int4 i1 = clamp(int4(c, c) + int4(-1, 0, 1, 0), 0, _Count - 1);
	int2 b1 = int2(_B[i1.xy], _B[i1.zw]);
	float2 u1 = float2(_U0[i1.xy], _U0[i1.zw]);
	u1 = (b1 == 0) ? u1 : u;
	float a = dot(float3(u1, u), float3(1, 1, -2));
	float dt = _Params.x;

	v += a * dt;
	u += v * dt;

	_V[c] = v;
	_U1[c] = u;
}

[numthreads(64,1,1)]
void Clamp(uint3 id : SV_DispatchThreadID) {
	int2 c = int2(id.x, 0);
	int b = _B[c];
	float u = _U0[c];
	float v = _V[c];

	float dl = _Params.y;
	v = lerp(v, 0, dl);
	u = lerp(u, 0, dl);
	
	_V[c] = v;
	_U1[c] = u;
}
